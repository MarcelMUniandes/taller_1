b2_ci <- coef(lm(log_salary_m ~ age+age_sq, data = geih, subset = index))[3]
}
boot(gas, ci, R = 1000)
boot(geih, ci, R = 1000)
ci_model2 <- function(data, index){
model2 <- lm(log_salary_m ~ age+age_sq, data = geih, subset = index)
coefs <- model2$coefficients
b1 <- coefs[1]
b2 <- coefs[2]
return(b1, b2)
}
boot(geih, ci_model2, R = 1000)
# Corriendo el modelo (2)
model2 <- lm(log_salary_m ~ age+age_sq, data = geih)
? stargazer
p_load(tidyverse, rvest, writexl, readxl,
gt, gtsummary, caret, boot, stargazer)
ci_model2 <- function(data, index){
model2 <- lm(log_salary_m ~ age+age_sq, data = geih, subset = index)
coefs <- model2$coefficients
b1 <- coefs[1]
b2 <- coefs[2]
}
boot(geih, ci_model2, R = 1000)
# Corriendo el modelo (2)
model2 <- lm(log_salary_m ~ age+age_sq, data = geih)
stargazer(model2, type = "text")
rm(list = ls())
# Cargando paquetes -------------------------------------------------------
library(pacman)
p_load(tidyverse, rvest, writexl, readxl,
gt, gtsummary, caret, boot, stargazer)
# Estableciendo rutas -----------------------------------------------------
wd_main <- "C:/Users/Juan/OneDrive - Universidad de los andes/Escritorio/Universidad/Posgrado/1. Primer Semestre/Big Data y Machine Learning/Trabajos/taller_1"
wd_code <- "/scripts"
wd_output <- "/stores"
# Definiciones necesarias -------------------------------------------------
set.seed(07092025)
geih <- data.frame()
options("scipen"=100, "digits"=4)
# Scrapeando los datos de la página ---------------------------------------
url_base <- "https://ignaciomsarmiento.github.io/GEIH2018_sample/"
# Encontrando los hipervínculos del HTML
links <- read_html(url_base) %>%
html_nodes("a") %>%
html_attr("href")
pages <- links[which(substring(links, 1, 4) == "page")]
# Ejercicio 1 -------------------------------------------------------------
# La página es dinámica. Al buscar de dónde vienen los datos de cada página,
# se ve que tienen un link en común (url_base_tablas). Lo único que varía
# entre bases es el número.
# Se puede hacer un loop para iterar sobre cada link y extraer la tabla.
# Así, se creo el data frame "geih" y se une anexa con cada base scrapeada.
# El resultado es una base de 32177 observaciones y 178 variables.
url_base_tablas <- 'https://ignaciomsarmiento.github.io/GEIH2018_sample/pages/geih_page_'
for (i in seq(1, length(pages))){
url_tabla <- paste0(url_base_tablas, i, ".html")
base <- read_html(url_tabla) %>%
html_table()
geih <- rbind(geih, base[[1]])
print(paste0("Base ", i ," cargada."))
}
# Borrando columna vacía
geih[1] <- NULL
write_xlsx(geih, paste0(wd_main, wd_output, "/base_geih.xlsx"))
# Value imputation
# "dsi" es una variable dicótoma que indica si un individuo es empleado o no.
# Así, esta variable toma el valor de 1 si es desempleado y 0 de lo contrario.
# Sin embargo, la variable salarios presenta varios missing values, por lo que
# es necesario imputarlos. Para determinar la metodología para imputar los datos,
# decidimos graficar un histograma de la variable y_salary_m junto a la media y
# la mediana.
# Histograma antes de imputación.
hist(geih$y_salary_m, breaks = 150,
main = "Histogram of salary",
xlab = "Salary")
abline(v = mean(geih$y_salary_m, na.rm = TRUE), col = 'red', lty = 2, lwd = 2)
abline(v = median(geih$y_salary_m, na.rm = TRUE), col = 'blue', lty = 2, lwd = 2)
text(x = 30000000,
y = 3000,
labels = paste0("Mean is: ", round(mean(geih$y_salary_m, na.rm = TRUE))))
text(x = 30000000,
y = 2800,
labels = paste0("Median is: ", round(median(geih$y_salary_m, na.rm = TRUE))))
geih <- geih %>%
mutate(y_salary_m = ifelse(is.na(y_salary_m), median(y_salary_m, na.rm = TRUE), y_salary_m))
# Histograma después de la imputación.
hist(geih$y_salary_m, breaks = 150,
main = "Histogram of salary",
xlab = "Salary")
abline(v = mean(geih$y_salary_m, na.rm = TRUE), col = 'red', lty = 2, lwd = 2)
abline(v = median(geih$y_salary_m, na.rm = TRUE), col = 'blue', lty = 2, lwd = 2)
text(x = 30000000,
y = 20000,
labels = paste0("Mean is: ", round(mean(geih$y_salary_m, na.rm = TRUE))))
text(x = 30000000,
y = 18000,
labels = paste0("Median is: ", round(median(geih$y_salary_m, na.rm = TRUE))))
# Ejercicio 2 -------------------------------------------------------------
# Creando las variables del modelo (2)
geih <- geih %>%
mutate(age_sq = age^2,
log_salary_m = log(y_salary_m))
# Corriendo el modelo (2)
model2 <- lm(log_salary_m ~ age+age_sq, data = geih)
stargazer(model2, type = "text")
# Hallando los intervalos de confianza utilizando bootstrap.
ci_model2 <- function(data, index){
model2 <- lm(log_salary_m ~ age+age_sq, data = geih, subset = index)
coefs <- model2$coefficients
b1 <- coefs[1]
b2 <- coefs[2]
}
boot(geih, ci_model2, R = 1000)
model2 <- lm(log_salary_m ~ age+age_sq, data = geih)
stargazer(model2, type = "text")
# Hallando los intervalos de confianza utilizando bootstrap.
ci_model2 <- function(data, index){
model2 <- lm(log_salary_m ~ age+age_sq, data = geih, subset = index)
coefs <- model2$coefficients
b1 <- coefs[1]
# b2 <- coefs[2]
}
boot(geih, ci_model2, R = 1000)
geih <- rename(geih, 'bin_male'='sex')
names(geih)
model3 <- lm(log_salary_m ~ bin_male)
stargazer(model3, 'text')
model3 <- lm(log_salary_m ~ bin_male)
model3 <- lm(log_salary_m ~ bin_male, data = geih)
stargazer(model3, 'text')
stargazer(model3, type = 'text')
rm(list = ls())
# Formateando y estableciendo preferencias --------------------------------
rm(list = ls())
set.seed(07092025)
options("scipen"=100, "digits"=4)
# Cargando paquetes -------------------------------------------------------
library(pacman)
p_load(tidyverse, rvest, writexl, readxl,
gt, gtsummary, caret, boot, stargazer)
source(paste0(wd_main, wd_code, "/aux_functions.R"))
rm(list = ls())
# Formateando y estableciendo preferencias --------------------------------
rm(list = ls())
set.seed(07092025)
options("scipen"=100, "digits"=4)
# Cargando paquetes -------------------------------------------------------
library(pacman)
p_load(tidyverse, rvest, writexl, readxl,
gt, gtsummary, caret, boot, stargazer)
source(paste0(wd_main, wd_code, "/aux_functions.R"))
library(pacman)
p_load(tidyverse, rvest, writexl, readxl,
gt, gtsummary, caret, boot, stargazer)
source(paste0(wd_main, wd_code, "/aux_functions.R"))
# Estableciendo rutas -----------------------------------------------------
wd_main <- "/Users/marianacorrea/Desktop/PEG/Big data/Taller 1/Sin título/taller_1"
wd_code <- "/scripts"
wd_output <- "/stores"
# Definiciones necesarias -------------------------------------------------
geih <- data.frame()
# Ejercicio 1 -------------------------------------------------------------
# Scrapeando datos de la página
url_base <- "https://ignaciomsarmiento.github.io/GEIH2018_sample/"
links <- read_html(url_base) %>%
html_nodes("a") %>%
html_attr("href")
pages <- links[which(substring(links, 1, 4) == "page")]
url_base_tablas <- 'https://ignaciomsarmiento.github.io/GEIH2018_sample/pages/geih_page_'
for (i in seq(1, length(pages))){
url_tabla <- paste0(url_base_tablas, i, ".html")
base <- read_html(url_tabla) %>%
html_table()
geih <- rbind(geih, base[[1]])
print(paste0("Base ", i ," cargada."))
}
geih[1] <- NULL
write_xlsx(geih, paste0(wd_main, wd_output, "/base_geih.xlsx"))
# Explorando los datos
hist(geih$y_salary_m, breaks = 150,
main = "Histogram of salary",
xlab = "Salary")
abline(v = mean(geih$y_salary_m, na.rm = TRUE), col = 'red', lty = 2, lwd = 2)
abline(v = median(geih$y_salary_m, na.rm = TRUE), col = 'blue', lty = 2, lwd = 2)
text(x = 30000000,
y = 3000,
labels = paste0("Mean is: ", round(mean(geih$y_salary_m, na.rm = TRUE))))
text(x = 30000000,
y = 2800,
labels = paste0("Median is: ", round(median(geih$y_salary_m, na.rm = TRUE))))
# Imputación
geih <- geih %>%
mutate(y_salary_m = ifelse(is.na(y_salary_m), median(y_salary_m, na.rm = TRUE), y_salary_m))
# Histograma después de la imputación.
hist(geih$y_salary_m, breaks = 150,
main = "Histogram of salary",
xlab = "Salary")
abline(v = mean(geih$y_salary_m, na.rm = TRUE), col = 'red', lty = 2, lwd = 2)
abline(v = median(geih$y_salary_m, na.rm = TRUE), col = 'blue', lty = 2, lwd = 2)
text(x = 30000000,
y = 20000,
labels = paste0("Mean is: ", round(mean(geih$y_salary_m, na.rm = TRUE))))
text(x = 30000000,
y = 18000,
labels = paste0("Median is: ", round(median(geih$y_salary_m, na.rm = TRUE))))
# Ejercicio 2 -------------------------------------------------------------
# Creando las variables del modelo (2)
geih <- geih %>%
mutate(age_sq = age^2,
log_salary_m = log(y_salary_m))
# Corriendo el modelo (2)
model2 <- lm(log_salary_m ~ age+age_sq, data = geih)
stargazer(model2, type = "text")
# Hallando los intervalos de confianza utilizando bootstrap.
ci_model2 <- function(data, index){
model2 <- lm(log_salary_m ~ age+age_sq, data = geih, subset = index)
coefs <- model2$coefficients
b1 <- coefs[1]
# b2 <- coefs[2]
}
boot(geih, ci_model2, R = 1000)
# Ejercicio 3 -------------------------------------------------------------
# Estimando modelo
geih <- rename(geih, 'bin_male'='sex')
model3 <- lm(log_salary_m ~ bin_male, data = geih)
stargazer(model3, type = 'text')
# Ejercicio 4 -------------------------------------------------------------
# Ejercicio 5 -------------------------------------------------------------
# Formateando y estableciendo preferencias --------------------------------
rm(list = ls())
set.seed(07092025)
options("scipen"=100, "digits"=4)
# Cargando paquetes -------------------------------------------------------
library(pacman)
p_load(tidyverse, rvest, writexl, readxl,
gt, gtsummary, caret, boot, stargazer)
# Estableciendo rutas -----------------------------------------------------
wd_main <- "/Users/marianacorrea/Desktop/PEG/Big data/Taller 1/Sin título/taller_1"
wd_code <- "/scripts"
wd_output <- "/stores"
# Definiciones necesarias -------------------------------------------------
geih <- data.frame()
# Ejercicio 1 -------------------------------------------------------------
# Scrapeando datos de la página
url_base <- "https://ignaciomsarmiento.github.io/GEIH2018_sample/"
links <- read_html(url_base) %>%
html_nodes("a") %>%
html_attr("href")
pages <- links[which(substring(links, 1, 4) == "page")]
url_base_tablas <- 'https://ignaciomsarmiento.github.io/GEIH2018_sample/pages/geih_page_'
for (i in seq(1, length(pages))){
url_tabla <- paste0(url_base_tablas, i, ".html")
base <- read_html(url_tabla) %>%
html_table()
geih <- rbind(geih, base[[1]])
print(paste0("Base ", i ," cargada."))
}
geih[1] <- NULL
write_xlsx(geih, paste0(wd_main, wd_output, "/base_geih.xlsx"))
# Explorando los datos
hist(geih$y_salary_m, breaks = 150,
main = "Histogram of salary",
xlab = "Salary")
abline(v = mean(geih$y_salary_m, na.rm = TRUE), col = 'red', lty = 2, lwd = 2)
abline(v = median(geih$y_salary_m, na.rm = TRUE), col = 'blue', lty = 2, lwd = 2)
text(x = 30000000,
y = 3000,
labels = paste0("Mean is: ", round(mean(geih$y_salary_m, na.rm = TRUE))))
text(x = 30000000,
y = 2800,
labels = paste0("Median is: ", round(median(geih$y_salary_m, na.rm = TRUE))))
# Imputación
geih <- geih %>%
mutate(y_salary_m = ifelse(is.na(y_salary_m), median(y_salary_m, na.rm = TRUE), y_salary_m))
# Histograma después de la imputación.
hist(geih$y_salary_m, breaks = 150,
main = "Histogram of salary",
xlab = "Salary")
abline(v = mean(geih$y_salary_m, na.rm = TRUE), col = 'red', lty = 2, lwd = 2)
abline(v = median(geih$y_salary_m, na.rm = TRUE), col = 'blue', lty = 2, lwd = 2)
text(x = 30000000,
y = 20000,
labels = paste0("Mean is: ", round(mean(geih$y_salary_m, na.rm = TRUE))))
text(x = 30000000,
y = 18000,
labels = paste0("Median is: ", round(median(geih$y_salary_m, na.rm = TRUE))))
# Ejercicio 2 -------------------------------------------------------------
# Creando las variables del modelo (2)
geih <- geih %>%
mutate(age_sq = age^2,
log_salary_m = log(y_salary_m))
# Corriendo el modelo (2)
model2 <- lm(log_salary_m ~ age+age_sq, data = geih)
stargazer(model2, type = "text")
# Hallando los intervalos de confianza utilizando bootstrap.
ci_model2 <- function(data, index){
model2 <- lm(log_salary_m ~ age+age_sq, data = geih, subset = index)
coefs <- model2$coefficients
b1 <- coefs[1]
# b2 <- coefs[2]
}
boot(geih, ci_model2, R = 1000)
# Ejercicio 3 -------------------------------------------------------------
# Estimando modelo
geih <- rename(geih, 'bin_male'='sex')
model3 <- lm(log_salary_m ~ bin_male, data = geih)
stargazer(model3, type = 'text')
# Ejercicio 4 -------------------------------------------------------------
# prueba
# Ejercicio 5 -------------------------------------------------------------
View(geih)
Controles <- age + age_sq + educ
Controles <- ~ age + age_sq + educ
Controles <- ~ age + age_sq
y_tilde <- resid(lm(update(controles, log_salary_m ~ .), data = geih))
controles <- ~ age + age_sq
y_tilde <- resid(lm(update(controles, log_salary_m ~ .), data = geih))
d_tilde <- resid(lm(update(controles, bin_male ~ .), data = geih))
summary(model4b_fwl)
summary(model4_fwl)
model4_fwl <- lm(y_tilde ~ 0 + d_tilde)
summary(model4_fwl)
coef_cond <- coef(model4_fwl)
cat("\n[FWL] beta (log):", round(beta_cond, 4),
"| SE clásico:", round(se_cond, 4), "\n")
cat("\n[FWL] beta (log):", round(coef_cond, 4),
"| SE clásico:", round(se_cond, 4), "\n")
se_cond <- sqrt(vcov(model4_fwl)[1,1])
cat("\n[FWL] beta (log):", round(coef_cond, 4),
"| SE clásico:", round(se_cond, 4), "\n")
f_boot_fwl <- function(data, idx){
d <- data[idx, ]
yb <- resid(lm(update(controles, log_salary_m ~ .), data = d))
db <- resid(lm(update(controles, bin_male     ~ .), data = d))
coef(lm(yb ~ 0 + db))[1]
}
set.seed(1213)
coef_boot  <- boot(geih, f_boot_fwl, R = 1000)
se_boot <- sd(b_fwl$t)
set.seed(1213)
coef_boot  <- boot(geih, f_boot_fwl, R = 1000)
se_boot <- sd(coef_boot$t)
model4_ols <- lm(log_salary_m ~ bin_male + age + age_sq, data = geih)
cat("¿Coef. OLS(bin_male) == FWL? ",
all.equal(unname(coef(model4_equiv)["bin_male"]), unname(coef(model4_fwl)[1])), "\n")
cat("¿Coef. OLS(bin_male) == FWL? ",
all.equal(unname(coef(model4_ols)["bin_male"]), unname(coef(model4_fwl)[1])), "\n")
to_pct <- function(b) (exp(b) - 1) * 100
cat(sprintf(
"[4b] FWL beta (log): %.4f | SE clásico: %.4f | SE bootstrap: %.4f | Gap (%%): %.2f%%\n",
beta_fwl, se_clas, se_boot, to_pct(beta_fwl)
))
# Modelo con controles FWL
# Falta decidir que controles usar (soy Mariana)
controles <- ~ age + age_sq
y_tilde <- resid(lm(update(controles, log_salary_m ~ .), data = geih))
d_tilde <- resid(lm(update(controles, bin_male ~ .), data = geih))
model4_fwl <- lm(y_tilde ~ 0 + d_tilde)
summary(model4_fwl)
coef_fwl <- coef(model4_fwl[1])
se_fwl <- sqrt(vcov(model4_fwl)[1,1])
# Modelo con controles FWL y Bootstrap
f_boot_fwl <- function(data, idx){
d <- data[idx, ]                                                #Remuestreo con reemplazo
resid_y <- resid(lm(update(controles, log_salary_m ~ .), data = d))
resid_d <- resid(lm(update(controles, bin_male     ~ .), data = d))
coef(lm(yb ~ 0 + db))[1]
}
set.seed(1213)
coef_boot  <- boot(geih, f_boot_fwl, R = 1000)
set.seed(1213)
coef_boot  <- boot(geih, f_boot_fwl, R = 1000)
f_boot_fwl <- function(data, idx){
d <- data[idx, ]                                                #Remuestreo con reemplazo
resid_y <- resid(lm(update(controles, log_salary_m ~ .), data = d))
resid_d <- resid(lm(update(controles, bin_male     ~ .), data = d))
coef(lm(resid_y ~ 0 + db))[1]
}
set.seed(1213)
coef_boot  <- boot(geih, f_boot_fwl, R = 1000)
f_boot_fwl <- function(data, idx){
d <- data[idx, ]                                                #Remuestreo con reemplazo
resid_y <- resid(lm(update(controles, log_salary_m ~ .), data = d))
resid_d <- resid(lm(update(controles, bin_male     ~ .), data = d))
coef(lm(resid_y ~ 0 + resid_d))[1]
}
set.seed(1213)
coef_boot  <- boot(geih, f_boot_fwl, R = 1000)
se_boot <- sd(coef_boot$t)
# Comparación
model4_ols <- lm(log_salary_m ~ bin_male + age + age_sq, data = geih)
to_pct <- function(b) (exp(b) - 1) * 100
cat(sprintf(
"[4b] FWL beta (log): %.4f | SE clásico: %.4f | SE bootstrap: %.4f | Gap (%%): %.2f%%\n",
coef_fwl, se_fwl, se_boot, to_pct(coef_fwl)
))
stargazer(model3, model4_ols, model4_fwl, type='text')
stargazer(model3, model4_ols, type='text')
# Formateando y estableciendo preferencias --------------------------------
rm(list = ls())
set.seed(07092025)
options("scipen"=100, "digits"=4)
# Cargando paquetes -------------------------------------------------------
library(pacman)
p_load(tidyverse, rvest, writexl, readxl,
gt, gtsummary, caret, boot, stargazer)
source(paste0(wd_main, wd_code, "/aux_functions.R"))
# Formateando y estableciendo preferencias --------------------------------
rm(list = ls())
set.seed(07092025)
options("scipen"=100, "digits"=4)
# Cargando paquetes -------------------------------------------------------
library(pacman)
p_load(tidyverse, rvest, writexl, readxl,
gt, gtsummary, caret, boot, stargazer)
# Estableciendo rutas -----------------------------------------------------
wd_main <- "/Users/marianacorrea/Desktop/PEG/Big data/Taller 1/Sin título/taller_1"
wd_code <- "/scripts"
wd_output <- "/stores"
# Definiciones necesarias -------------------------------------------------
geih <- data.frame()
# Ejercicio 1 -------------------------------------------------------------
# Scrapeando datos de la página
url_base <- "https://ignaciomsarmiento.github.io/GEIH2018_sample/"
links <- read_html(url_base) %>%
html_nodes("a") %>%
html_attr("href")
pages <- links[which(substring(links, 1, 4) == "page")]
url_base_tablas <- 'https://ignaciomsarmiento.github.io/GEIH2018_sample/pages/geih_page_'
for (i in seq(1, length(pages))){
url_tabla <- paste0(url_base_tablas, i, ".html")
base <- read_html(url_tabla) %>%
html_table()
geih <- rbind(geih, base[[1]])
print(paste0("Base ", i ," cargada."))
}
geih[1] <- NULL
write_xlsx(geih, paste0(wd_main, wd_output, "/base_geih.xlsx"))
# Explorando los datos
hist(geih$y_salary_m, breaks = 150,
main = "Histogram of salary",
xlab = "Salary")
abline(v = mean(geih$y_salary_m, na.rm = TRUE), col = 'red', lty = 2, lwd = 2)
abline(v = median(geih$y_salary_m, na.rm = TRUE), col = 'blue', lty = 2, lwd = 2)
text(x = 30000000,
y = 3000,
labels = paste0("Mean is: ", round(mean(geih$y_salary_m, na.rm = TRUE))))
text(x = 30000000,
y = 2800,
labels = paste0("Median is: ", round(median(geih$y_salary_m, na.rm = TRUE))))
# Imputación
geih <- geih %>%
mutate(y_salary_m = ifelse(is.na(y_salary_m), median(y_salary_m, na.rm = TRUE), y_salary_m))
# Histograma después de la imputación.
hist(geih$y_salary_m, breaks = 150,
main = "Histogram of salary",
xlab = "Salary")
abline(v = mean(geih$y_salary_m, na.rm = TRUE), col = 'red', lty = 2, lwd = 2)
abline(v = median(geih$y_salary_m, na.rm = TRUE), col = 'blue', lty = 2, lwd = 2)
text(x = 30000000,
y = 20000,
labels = paste0("Mean is: ", round(mean(geih$y_salary_m, na.rm = TRUE))))
text(x = 30000000,
y = 18000,
labels = paste0("Median is: ", round(median(geih$y_salary_m, na.rm = TRUE))))
# Ejercicio 2 -------------------------------------------------------------
# Creando las variables del modelo (2)
geih <- geih %>%
mutate(age_sq = age^2,
log_salary_m = log(y_salary_m))
# Corriendo el modelo (2)
model2 <- lm(log_salary_m ~ age+age_sq, data = geih)
stargazer(model2, type = "text")
# Hallando los intervalos de confianza utilizando bootstrap.
ci_model2 <- function(data, index){
model2 <- lm(log_salary_m ~ age+age_sq, data = geih, subset = index)
coefs <- model2$coefficients
b1 <- coefs[1]
# b2 <- coefs[2]
}
boot(geih, ci_model2, R = 1000)
# Ejercicio 3 -------------------------------------------------------------
# Estimando modelo
geih <- rename(geih, 'bin_male'='sex')
model3 <- lm(log_salary_m ~ bin_male, data = geih)
stargazer(model3, type = 'text')
# Modelo con controles FWL
# Falta decidir que controles usar (soy Mariana)
controles <- ~ age + age_sq
y_tilde <- resid(lm(update(controles, log_salary_m ~ .), data = geih))
d_tilde <- resid(lm(update(controles, bin_male ~ .), data = geih))
model4_fwl <- lm(y_tilde ~ 0 + d_tilde)
summary(model4_fwl)
coef_fwl <- coef(model4_fwl[1])
se_fwl <- sqrt(vcov(model4_fwl)[1,1])
# Modelo con controles FWL y Bootstrap
f_boot_fwl <- function(data, idx){
d <- data[idx, ]                                                #Remuestreo con reemplazo
resid_y <- resid(lm(update(controles, log_salary_m ~ .), data = d))
resid_d <- resid(lm(update(controles, bin_male     ~ .), data = d))
coef(lm(resid_y ~ 0 + resid_d))[1]
}
set.seed(1213)
coef_boot  <- boot(geih, f_boot_fwl, R = 1000)
se_boot <- sd(coef_boot$t)
# Comparación
model4_ols <- lm(log_salary_m ~ bin_male + age + age_sq, data = geih)
to_pct <- function(b) (exp(b) - 1) * 100 #No se si debamos hacerle transformación logarítmica
stargazer(model3, model4_ols, type='text')
# Ejercicio 4 -------------------------------------------------------------
# Ejercicio 5 -------------------------------------------------------------
